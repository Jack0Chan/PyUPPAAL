<?xml version='1.0' encoding='utf-8'?>
<nta>
<declaration>// Place global declarations here.
broadcast chan a, b, c;
int count = 0;
int sender_count = 0;
const int rec_end = 10;
</declaration><template><name>Receiver</name><parameter>broadcast chan &amp;param1, broadcast chan &amp;param2, int inv_start, int guard_start</parameter><declaration>// Place local declarations here.
clock t;</declaration><location id="id0" x="-391" y="-102"><name x="-401" y="-136">Start</name><label kind="invariant" x="-401" y="-85">t&lt;=inv_start</label><label kind="testcodeEnter">count ++;</label><label kind="testcodeExit">count = 10;</label></location><location id="id1" x="-170" y="-102"><label kind="invariant" x="-178" y="-76">t&lt;=200</label><label kind="exponentialrate" x="-179" y="-93">0.8</label></location><location id="id2" x="-42" y="-93"><urgent /></location><location id="id3" x="-76" y="-212"><committed /></location><location id="id4" x="25" y="-212"><name x="15" y="-246">End1</name></location><location id="id5" x="51" y="-93"><name x="41" y="-127">End2</name><label kind="comments" x="42" y="-34">备注End2</label></location><branchpoint id="id6" x="-119" y="-144"> </branchpoint><init ref="id0" /><transition><source ref="id2" /><target ref="id5" /><label kind="synchronisation" x="-24" y="-110">param2?</label><label kind="assignment" x="-24" y="-93">t=888</label></transition><transition><source ref="id3" /><target ref="id4" /><label kind="synchronisation" x="-58" y="-229">param1?</label><label kind="assignment" x="-51" y="-212">t=999</label></transition><transition><source ref="id6" /><target ref="id3" /><label kind="probability" x="-93" y="-178">0.2</label></transition><transition><source ref="id6" /><target ref="id2" /><label kind="probability" x="-93" y="-119">0.8</label></transition><transition><source ref="id1" /><target ref="id6" /></transition><transition><source ref="id0" /><target ref="id1" /><label kind="guard" x="-331" y="-102">t&gt;= guard_start</label><label kind="assignment" x="-306" y="-85">count ++</label><label kind="testcode">count == -1;</label></transition></template><template><name>Sender</name><parameter>broadcast chan &amp;param1, broadcast chan &amp;param2</parameter><location id="id7" x="-459" y="-34"><name x="-493" y="-68">Start</name><label kind="testcodeEnter">sender_count = 10;</label><label kind="testcodeExit">sender_count = -1;</label><label kind="comments" x="-469" y="25">Start:
TestCode</label></location><location id="id8" x="-187" y="-102" /><location id="id9" x="-178" y="17" /><branchpoint id="id10" x="-323" y="-34"> </branchpoint><init ref="id7" /><transition><source ref="id10" /><target ref="id9" /><label kind="synchronisation" x="-305" y="-34">param2!</label></transition><transition><source ref="id10" /><target ref="id8" /><label kind="synchronisation" x="-305" y="-80">param1!</label><label kind="probability" x="-305" y="-51">0.8</label></transition><transition><source ref="id7" /><target ref="id10" /><nail x="-382" y="-136" /></transition></template><system>// Place template instantiations here.
rec = Receiver(a, b, 10, rec_end);
sender = Sender(a, b);
// List one or more processes to be composed into a system.
system rec, sender;
</system><queries><query><formula>E&lt;&gt; sender_count == 10</formula><comment /></query><query><formula>E&lt;&gt; count == 1</formula><comment /></query><query><formula>E&lt;&gt; rec.End1</formula><comment /></query><query><formula>E&lt;&gt; rec.t &gt;= 10</formula><comment /></query><query><formula>A[] not deadlock</formula><comment /></query></queries></nta>